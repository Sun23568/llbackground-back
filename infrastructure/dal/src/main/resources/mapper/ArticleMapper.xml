<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.llback.dal.article.dao.ArticleDao">

    <insert id="addArticle" parameterType="com.llback.dal.article.po.ArticlePo">
        INSERT INTO article (id, title, create_time, delete_status)
        VALUES (#{articleId}, #{title}, now(), '1')
    </insert>

    <insert id="addArticleContent" parameterType="com.llback.dal.article.po.ArticlePo">
        INSERT INTO article_content (pk_id, article_id, craft, content)
        VALUES (#{contentId}, #{articleId}, #{craft}, #{content})
    </insert>

    <select id="countArticle" resultType="Integer">
        SELECT count(0)
        FROM article w
        WHERE w.delete_status = '1'
    </select>

    <select id="listArticle" resultType="com.llback.dal.article.po.ArticlePo">
        SELECT w.id,
               w.title,
               date_format(w.create_time, '%Y.%m.%d %T') createTime,
               date_format(w.update_time, '%Y.%m.%d %T') updateTime
        FROM article w
        WHERE w.delete_status = '1'
        ORDER BY create_time desc
            LIMIT #{offSet}, #{pageRow}
    </select>

    <!-- 根据id查询文章 -->
    <select id="getArticleById" resultType="com.llback.dal.article.po.ArticlePo">
        SELECT PK_ID, ARTICLE_ID, CONTENT, CRAFT, CREATE_TS, T2.TITLE
        FROM ARTICLE_CONTENT T1
                 LEFT JOIN ARTICLE T2 ON T1.ARTICLE_ID = T2.ID
        WHERE ARTICLE_ID = #{articleId}
          AND CRAFT = #{craft}
    </select>

    <update id="updateArticleBaseInfo" parameterType="com.llback.dal.article.po.ArticlePo">
        UPDATE article
        SET title = #{title}
        WHERE id = #{articleId}
    </update>

    <!-- 更新文章内容 -->
    <update id="updateArticleContent" parameterType="com.llback.dal.article.po.ArticlePo">
        UPDATE article_content
        SET content = #{content}
        WHERE ARTICLE_ID = #{articleId}
          AND CRAFT = #{craft}
    </update>

    <!-- 删除文章 -->
    <update id="removeArticle">
        UPDATE article
        SET delete_status = '0'
        WHERE id = #{articleId}
    </update>

</mapper>
